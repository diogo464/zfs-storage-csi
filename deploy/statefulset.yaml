kind: StatefulSet
apiVersion: apps/v1
metadata:
  name: csi-hostpathplugin
  namespace: default
  labels:
    app.kubernetes.io/instance: hostpath.csi.k8s.io
    app.kubernetes.io/part-of: csi-driver-host-path
    app.kubernetes.io/name: csi-hostpathplugin
    app.kubernetes.io/component: plugin
spec:
  serviceName: "csi-hostpathplugin"
  # One replica only:
  # Host path driver only works when everything runs
  # on a single node.
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: hostpath.csi.k8s.io
      app.kubernetes.io/part-of: csi-driver-host-path
      app.kubernetes.io/name: csi-hostpathplugin
      app.kubernetes.io/component: plugin
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: hostpath.csi.k8s.io
        app.kubernetes.io/part-of: csi-driver-host-path
        app.kubernetes.io/name: csi-hostpathplugin
        app.kubernetes.io/component: plugin
    spec:
      serviceAccountName: csi-hostpathplugin-sa
      containers:
        - name: hostpath
          image: git.d464.sh/infra/storage-csi:latest
          imagePullPolicy: Always
          args:
            - controller
            # - "--drivername=hostpath.csi.k8s.io"
            # - "--v=5"
            # - "--endpoint=$(CSI_ENDPOINT)"
            # - "--nodeid=$(KUBE_NODE_NAME)"
          env:
            - name: CSI_ENDPOINT
              value: unix:///csi/csi.sock
          envFrom:
            - secretRef:
                name: storage-csi
                optional: false
          securityContext:
            privileged: true
          ports:
          - containerPort: 9898
            name: healthz
            protocol: TCP
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /healthz
              port: healthz
            initialDelaySeconds: 10
            timeoutSeconds: 3
            periodSeconds: 2
          volumeMounts:
            - mountPath: /csi
              name: socket-dir
            - mountPath: /var/lib/kubelet/pods
              mountPropagation: Bidirectional
              name: mountpoint-dir
            - mountPath: /var/lib/kubelet/plugins
              mountPropagation: Bidirectional
              name: plugins-dir
            - mountPath: /csi-data-dir
              name: csi-data-dir
            - mountPath: /dev
              name: dev-dir

        #- name: csi-external-health-monitor-controller
        #  image: registry.k8s.io/sig-storage/csi-external-health-monitor-controller:v0.10.0
        #  args:
        #    - "--v=5"
        #    - "--csi-address=$(ADDRESS)"
        #    - "--leader-election"
        #  env:
        #    - name: ADDRESS
        #      value: /csi/csi.sock
        #  imagePullPolicy: "IfNotPresent"
        #  volumeMounts:
        #    - name: socket-dir
        #      mountPath: /csi

        # - name: node-driver-registrar
        #   image: registry.k8s.io/sig-storage/csi-node-driver-registrar:v2.9.3
        #   args:
        #     - --v=5
        #     - --csi-address=/csi/csi.sock
        #     - --kubelet-registration-path=/var/lib/kubelet/plugins/csi-hostpath/csi.sock
        #   securityContext:
        #     # This is necessary only for systems with SELinux, where
        #     # non-privileged sidecar containers cannot access unix domain socket
        #     # created by privileged CSI driver container.
        #     privileged: true
        #   env:
        #     - name: KUBE_NODE_NAME
        #       valueFrom:
        #         fieldRef:
        #           apiVersion: v1
        #           fieldPath: spec.nodeName
        #   volumeMounts:
        #   - mountPath: /csi
        #     name: socket-dir
        #   - mountPath: /registration
        #     name: registration-dir
        #   - mountPath: /csi-data-dir
        #     name: csi-data-dir
        #
        - name: liveness-probe
          volumeMounts:
          - mountPath: /csi
            name: socket-dir
          image: registry.k8s.io/sig-storage/livenessprobe:v2.11.0
          args:
          - --csi-address=/csi/csi.sock
          - --health-port=9898

        # - name: csi-attacher
        #   image: registry.k8s.io/sig-storage/csi-attacher:v4.4.3
        #   args:
        #     - --v=5
        #     - --csi-address=/csi/csi.sock
        #   securityContext:
        #     # This is necessary only for systems with SELinux, where
        #     # non-privileged sidecar containers cannot access unix domain socket
        #     # created by privileged CSI driver container.
        #     privileged: true
        #   volumeMounts:
        #   - mountPath: /csi
        #     name: socket-dir

        - name: csi-provisioner
          image: registry.k8s.io/sig-storage/csi-provisioner:v3.6.3
          args:
            - -v=5
            - --csi-address=/csi/csi.sock
            - --feature-gates=Topology=true
            - --extra-create-metadata
            # end csi-provisioner args
          securityContext:
            # This is necessary only for systems with SELinux, where
            # non-privileged sidecar containers cannot access unix domain socket
            # created by privileged CSI driver container.
            privileged: true
          volumeMounts:
            - mountPath: /csi
              name: socket-dir

        - name: csi-resizer
          image: registry.k8s.io/sig-storage/csi-resizer:v1.9.3
          args:
            - -v=5
            - -csi-address=/csi/csi.sock
          securityContext:
            # This is necessary only for systems with SELinux, where
            # non-privileged sidecar containers cannot access unix domain socket
            # created by privileged CSI driver container.
            privileged: true
          volumeMounts:
            - mountPath: /csi
              name: socket-dir

        # - name: csi-snapshotter
        #   image: registry.k8s.io/sig-storage/csi-snapshotter:v6.3.3
        #   args:
        #     - -v=5
        #     - --csi-address=/csi/csi.sock
        #   securityContext:
        #     # This is necessary only for systems with SELinux, where
        #     # non-privileged sidecar containers cannot access unix domain socket
        #     # created by privileged CSI driver container.
        #     privileged: true
        #   volumeMounts:
        #     - mountPath: /csi
        #       name: socket-dir

      volumes:
        - hostPath:
            path: /var/lib/kubelet/plugins/csi-hostpath
            type: DirectoryOrCreate
          name: socket-dir
        - hostPath:
            path: /var/lib/kubelet/pods
            type: DirectoryOrCreate
          name: mountpoint-dir
        - hostPath:
            path: /var/lib/kubelet/plugins_registry
            type: Directory
          name: registration-dir
        - hostPath:
            path: /var/lib/kubelet/plugins
            type: Directory
          name: plugins-dir
        - hostPath:
            # 'path' is where PV data is persisted on host.
            # using /tmp is also possible while the PVs will not available after plugin container recreation or host reboot
            path: /var/lib/csi-hostpath-data/
            type: DirectoryOrCreate
          name: csi-data-dir
        - hostPath:
            path: /dev
            type: Directory
          name: dev-dir
