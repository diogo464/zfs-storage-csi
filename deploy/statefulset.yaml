kind: StatefulSet
apiVersion: apps/v1
metadata:
  name: storage-csi
  namespace: default
  labels:
    app.kubernetes.io/instance: csi.infra.d464.sh
    app.kubernetes.io/part-of: storage-csi
    app.kubernetes.io/name: storage-csi
    app.kubernetes.io/component: plugin
spec:
  serviceName: "storage-csi-plugin"
  # One replica only:
  # Host path driver only works when everything runs
  # on a single node.
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: csi.infra.d464.sh
      app.kubernetes.io/part-of: storage-csi
      app.kubernetes.io/name: storage-csi-plugin
      app.kubernetes.io/component: plugin
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: csi.infra.d464.sh
        app.kubernetes.io/part-of: storage-csi
        app.kubernetes.io/name: storage-csi-plugin
        app.kubernetes.io/component: plugin
    spec:
      serviceAccountName: storage-csi
      containers:
        - name: driver
          image: cr.d464.sh/infra/storage-csi:latest
          imagePullPolicy: Always
          args:
            - controller
          env:
            - name: CSI_ENDPOINT
              value: unix:///csi/csi.sock
          envFrom:
            - secretRef:
                name: storage-csi
                optional: false
          securityContext:
            privileged: true
          ports:
          - containerPort: 9898
            name: healthz
            protocol: TCP
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /healthz
              port: healthz
            initialDelaySeconds: 10
            timeoutSeconds: 3
            periodSeconds: 2
          volumeMounts:
            - mountPath: /csi
              name: socket-dir

        - name: liveness-probe
          volumeMounts:
          - mountPath: /csi
            name: socket-dir
          image: registry.k8s.io/sig-storage/livenessprobe:v2.11.0
          args:
          - --csi-address=/csi/csi.sock
          - --health-port=9898

        - name: csi-attacher
          image: registry.k8s.io/sig-storage/csi-attacher:v4.4.3
          args:
            - --v=5
            - --csi-address=/csi/csi.sock
          securityContext:
            # This is necessary only for systems with SELinux, where
            # non-privileged sidecar containers cannot access unix domain socket
            # created by privileged CSI driver container.
            privileged: true
          volumeMounts:
          - mountPath: /csi
            name: socket-dir

        - name: csi-provisioner
          image: registry.k8s.io/sig-storage/csi-provisioner:v3.6.3
          args:
            - -v=5
            - --csi-address=/csi/csi.sock
            - --feature-gates=Topology=true
            - --extra-create-metadata
          securityContext:
            # This is necessary only for systems with SELinux, where
            # non-privileged sidecar containers cannot access unix domain socket
            # created by privileged CSI driver container.
            privileged: true
          volumeMounts:
            - mountPath: /csi
              name: socket-dir

        - name: csi-resizer
          image: registry.k8s.io/sig-storage/csi-resizer:v1.9.3
          args:
            - -v=5
            - -csi-address=/csi/csi.sock
          securityContext:
            # This is necessary only for systems with SELinux, where
            # non-privileged sidecar containers cannot access unix domain socket
            # created by privileged CSI driver container.
            privileged: true
          volumeMounts:
            - mountPath: /csi
              name: socket-dir

      volumes:
        - name: socket-dir
          emptyDir:
